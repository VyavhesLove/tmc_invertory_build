необходимо сделать приложение для учета ТМЦ
задача - работа с БД ТМЦ через простую веб морду.
функционал:
Редактировать ТМЦ - редактирование полей
тип, бренд, модель, наименование, серийник.

Учёт ТМЦ
Основное окно:
ID - сквозной ID по порядку, присваивается автоматически.
Наименование
Серийный номер
Бренд (производитель)
Статус Ответсвенный
Локация (Объект)

Статусы: В ремонте, Выдано, Подтвердить ремонт
Опции
Редактировать ТМЦ - редактирование полей тип, бренд, модель, наименование, серийник
Передать ТМЦ - выбор объекта и ответственного
Передать в работу - выбор бригады
Отправить в сервис (ремонт) - заполнить причину ремонта
Вернуть из сервиса - комментарий
стэк
Архитектура приложения Фронтенд Vue.js или даже Alpine.js
Компоненты: таблица с ТМЦ, формы редактирования и передачи, фильтры по статусам, панели навигации.
В таблице ТМЦ возможность добавлять или скрывать столбцы.
Респонсивный дизайн для мобильных устройств

Бэкенд Python FastAPI
База данных PostgreSQL ORM SQLAlchemy для Python
Используй Passlib с bcrypt или argon2 для простой и надежной работы с паролями.
Соль генерируется автоматически и хранится внутри хеша.
Перец храните отдельно вне базы, например, в переменных среды или секретах Docker.
Вход по одноразовому коду (OTP) на телефон или email Простые пароли , например, имя + дата рождения
Можно добавить авторизацию по токенам JWT.
Авторизация и разграничение прав доступа (например, кто может только просматривать, а кто редактировать или менять статусы).
Admin пользователь не сможет войти, если его логина нет в БД
Защита API от CSRF, XSS, SQL-инъекций.
Реализовать миграции через Alembic для управления изменениями структуры.
Распиши все максимально подробно начиная с простого FastAPI проекта и настроики подключение к PostgreSQL через SQLAlchemy установки и настройки PostgreSQL через SQLAlchemy (можно ссылками)
Реализовать базовый вход с проверкой логина из БД (JWT).
Создать модель ТМЦ и эндпоинты для простого просмотра списка.
Запустить проект в Docker для локального тестирования.
напиши yml для Docker compose Docker
контейнеры: Фронтенд контейнер (можно с Nginx для раздачи статического фронтенда)
Бэкенд контейнер с API сервисом
Контейнер БД PostgreSQL + PGAdmin Volume для хранения данных базы вне контейнера для сохранности при обновлениях.
пропиши необходимые сети и секреты